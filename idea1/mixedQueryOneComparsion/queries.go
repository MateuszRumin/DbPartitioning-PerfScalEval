package combineQueries

var CombinePost = []string{
	//start
	"SELECT * FROM posts WHERE id = 8422345;",
	"SELECT * FROM posts WHERE id = 8422345 limit 1;",
	"SELECT * FROM posts WHERE post_type_id = 7;",
	"SELECT * FROM posts WHERE post_type_id = 15 limit 10;",
	"SELECT * FROM posts WHERE accepted_answer_id IS NULL;",
	"SELECT * FROM posts WHERE accepted_answer_id IS NOT NULL limit 10;",
	"SELECT * FROM posts WHERE parent_id = 23425 limit 2;",
	"SELECT * FROM posts WHERE creation_date = '2022-05-15';",
	"SELECT * FROM posts WHERE score = 50;",
	"SELECT * FROM posts WHERE view_count = 1000;",
	"SELECT * FROM posts WHERE post_body LIKE '%bug%';",
	"SELECT * FROM posts WHERE owner_user_id = 500;",
	"SELECT * FROM posts WHERE last_editor_user_id = 1000;",
	"SELECT * FROM posts WHERE last_edit_date = '2021-12-31';",
	"SELECT * FROM posts WHERE last_activity_date = '2022-05-15';",
	"SELECT * FROM posts WHERE post_title LIKE '%bug%';",
	"SELECT * FROM posts WHERE tags LIKE '%python%';",
	"SELECT * FROM posts WHERE answer_count = 1;",
	"SELECT * FROM posts WHERE comment_count = 1;",
	"SELECT * FROM posts WHERE content_license = 'Apache 2.0';",
	"SELECT * FROM posts WHERE tags LIKE '%java%' AND answer_count > 5;",
	"SELECT content_license, COUNT(*) FROM posts GROUP BY content_license;",
	"SELECT * FROM posts ORDER BY view_count DESC LIMIT 15;",
	"SELECT * FROM posts WHERE last_edit_date BETWEEN '2023-01-01' AND '2023-12-31';",
	"SELECT * FROM posts LIMIT 500;",
	"SELECT COUNT(*) FROM posts WHERE tags LIKE '%java%';",
	"SELECT owner_user_id, AVG(score) AS avg_score FROM posts GROUP BY owner_user_id ORDER BY avg_score DESC LIMIT 10;",
	"SELECT tags, SUM(comment_count) AS total_comments FROM posts GROUP BY tags ORDER BY total_comments DESC LIMIT 10;",
	"SELECT MONTH(creation_date) AS month, COUNT(*) AS post_count FROM posts WHERE YEAR(creation_date) = 2023 GROUP BY MONTH(creation_date) ORDER BY month;",
	"SELECT view_count, AVG(score) AS avg_score FROM posts GROUP BY view_count ORDER BY view_count DESC LIMIT 10;",
	"SELECT comment_count, AVG(view_count) AS avg_views FROM posts GROUP BY comment_count ORDER BY comment_count DESC LIMIT 10;",
	"SELECT content_license, AVG(score) AS avg_score FROM posts GROUP BY content_license ORDER BY avg_score DESC;",
	"SELECT * FROM posts WHERE tags LIKE '%python%' AND post_type_id = 1 AND creation_date > '2023-01-01' ORDER BY score DESC LIMIT 20;",
	"SELECT YEAR(creation_date) AS year, COUNT(*) AS post_count, AVG(score) AS avg_score, SUM(comment_count) AS total_comments FROM posts GROUP BY YEAR(creation_date) ORDER BY year DESC;",
	"SELECT * FROM posts WHERE score > (SELECT AVG(score) FROM posts);",
}

var Combine = []string{}
